@model IEnumerable<WTCPortal.Models.Store>
@using GridMvc.Html
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Store/_LayoutStore.cshtml";
}
@helper CustomRenderingOfColumn(WTCPortal.Models.Store spec)
{
    if (spec.StoreDemographics.BusinessType == "BM")
    {
        @Html.Raw("Bike Manufacturer");
    }
    else if (spec.StoreDemographics.BusinessType == "OS")
    {
        @Html.Raw("Warehouse");
    }
    else
    {
        @Html.Raw("Speciality Bike Shop");
    }
}
@helper CustomRenderingOfColumnspec(WTCPortal.Models.Store spec)
{
    if (spec.StoreDemographics.Speciality == "Mountain")
    {
        @Html.Raw("Mountain Bikes");
    }
    else if (spec.StoreDemographics.BusinessType == "Touring")
    {
        @Html.Raw("Touring Bikes");
    }
    else
    {
        @Html.Raw("Road Bikes");
    }
}
<br />
<div class="form-inline" style="margin-left: 80%">
    @using (Html.BeginForm())
    {
        @Html.TextBox("searchString", null, new { @class = "form-control mr-sm-0" })
        <button class="btn btn-outline-dark my-2 my-sm-0" type="submit">Search</button>
    }
</div>
<div class="center align-items-center justify-content-center" style="margin-left: 46%">
    <nav aria-label="breadcrumb">
        <ol class="BBackground breadcrumb">
            <li class="breadcrumb-item"><a onclick="location.href='@Url.Action("Index", "Home")'">Home</a></li>
            <li class="breadcrumb-item BCactive" aria-current="page">Stores</li>
        </ol>
    </nav>
</div>
@Html.Grid(Model).Columns(columns =>
{
    columns.Add().Titled("Name").Filterable(true).Sanitized(false).Encoded(false).
    RenderValueAs(model => Html.ActionLink(model.Name,
      "Details", new { BusinessEntityID = model.BusinessEntityID }, null)
       .ToHtmlString());
    columns.Add(model => model.BusinessEntityID).Titled("Business ID");
    columns.Add(model => model.StoreDemographics.BusinessType).Titled("Business Type").RenderValueAs(model => CustomRenderingOfColumn(model));
    columns.Add(model => model.StoreDemographics.Speciality).Titled("Speciality").RenderValueAs(model => CustomRenderingOfColumnspec(model));
    columns.Add().Titled("Address").RenderValueAs(model => model.BusinessEntityAddress.Address.AddressLine1 + ", " + model.BusinessEntityAddress.Address.City);
    columns.Add(model => model.BusinessEntityAddress.Address.StateProvince.Name).Titled("State");
}).WithPaging(8).Sortable(true).Filterable()

